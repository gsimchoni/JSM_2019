Deep Visual Inference: Teaching Computers To See Rather Than Calculate Correlation
========================================================
author: Giora Simchoni
date: July 31st, 2019
autosize: true

JSM 2019

This RPres/html is available at Github or at:
http://bit.ly/jsm2019

Who am I
========================================================

- Graduated MSc Statistics from TAU in 2010
- Data Scientist (otherwise they won't hire me) subspecies Statistician
- 888, ebay, IBM, vFunction
- Blogger: [Sex, Drugs and Data](http://giorasimchoni.com)
- R/Python enthusiast: [Github](https://github.com/gsimchoni)

<div class="footer">bit.ly/jsm2019</div>

Line 'Em Up!
========================================================
title: FALSE
type: black_center

# Line 'Em Up!

Does your plot contain a signal over noise?
========================================================
incremental: true

- The key to understanding Visual Inference:
- A plot is a statistic
- Permute your data a few times, gather a few plots
- Judge your plot vs. the distribution of plots or run a survey
- Assumption-free, Parameter-free
- But how to present a distribution of plots?

<div class="footer">bit.ly/jsm2019</div>

Like so...
========================================================

### Is there a relation between a car's Engine Displacement and its Horse Power? (n = 32)

```{r Lineup-example1, message = FALSE, warning = FALSE, echo = FALSE}
library(tidyverse)
library(nullabor)

# reading from disk for reproducibility, however you should use the nullabor lineup function

# lineup_data_mtcars <- lineup(null_permute("hp"), mtcars)
# saveRDS(lineup_data_mtcars, "data/lineup_data_mtcars.RData")
lineup_data_mtcars <- readRDS("data/lineup_data_mtcars.RData")

ggplot(lineup_data_mtcars, aes(disp, hp)) +
  geom_point() +
  facet_wrap(~ .sample)
```

<div class="footer">bit.ly/jsm2019</div>

And so...
========================================================

### Is there a relation between Gender and Answer? (n = 843)
#### Q: Is it rude to bring a baby on plane?

```{r Lineup-example2, message = FALSE, warning = FALSE, echo = FALSE}
library(ggmosaic)

fly2 <- fly %>%
  mutate(
    RudeToBringBaby = forcats::fct_recode(RudeToBringBaby, No = "No, not at all rude", Somewhat = "Yes, somewhat rude", Yes = "Yes, very rude"),
    RudeToRecline = forcats::fct_recode(RudeToRecline, No = "No, not rude at all", Somewhat = "Yes, somewhat rude", Yes = "Yes, very rude"),
    RudeToBringBaby = forcats::fct_relevel(RudeToBringBaby, c("Yes", "Somewhat", "No")),
    RudeToRecline = forcats::fct_relevel(RudeToRecline, c("Yes", "Somewhat", "No")))

# reading from disk for reproducibility, however you should use the nullabor lineup function

# lineup_data_fly <- lineup(null_permute("Gender"), fly2)
# saveRDS(lineup_data_fly, "data/lineup_data_fly.RData")
lineup_data_fly <- readRDS("data/lineup_data_fly.RData")


ggplot(lineup_data_fly) +
  geom_mosaic(aes(x = product(RudeToBringBaby, Gender), fill=RudeToBringBaby), na.rm=TRUE) +
  labs(x = "", y = "") +
  scale_fill_ordinal(name = "") +
  facet_wrap(~ .sample)
```

<div class="footer">bit.ly/jsm2019</div>

And so...
========================================================

### Is there a relation between an actor's gender and no. of roles since his/her character ended? (n = 129)

```{r Lineup-example3, message = FALSE, warning = FALSE, echo = FALSE}
library(ggbeeswarm)

roles_after_char_end <- read_csv("data/roles_after_char_end.csv") %>%
  select(Gender, n_roles) %>%
  drop_na()

# reading from disk for reproducibility, however you should use the nullabor lineup function

# lineup_data_roles <- lineup(null_permute("Gender"), roles_after_char_end)
# saveRDS(lineup_data_roles, "data/lineup_data_roles.RData")
lineup_data_roles <- readRDS("data/lineup_data_roles.RData")

ggplot(lineup_data_roles, aes(Gender, n_roles, col = Gender)) +
  geom_beeswarm() +
  labs(x = "", y = "",
       caption = "Emmy nominated US drama shows 2000-2014, appeared in at least half the episodes, 4+ years since character end") +
  guides(color=FALSE) +
  facet_wrap(~ .sample)
```

<div class="footer">bit.ly/jsm2019</div>

Wait
========================================================
title: FALSE
type: black_center

# Wait, did you just say "judge a plot", as in "classify an image", and the year is >= 2012?

Deep Learning can't solve all your problems
========================================================
incremental: true

- But it sure is good at Computer Vision
- My idea: give a neural network thousands of scatter plots (mosaic plots, swarm plots)
- Of varying linear correlation (Cramer's V, t statistic)
- Train it to predict correlation (not calculate!)
- If it's good (low MSE), show it the lineup
- Make it choose the scatter plot with the highest score

<div class="footer">bit.ly/jsm2019</div>

A Convolutional Network
========================================================

![](images/architecture_expanded.png)

<font size="6">(Full code in my blog post [Book'em Danno!](http://giorasimchoni.com/2018/02/07/2018-02-07-book-em-danno/) and through References)</font>

If it's good
========================================================
title: FALSE
type: black_center

# *If* it's good?

Oh, it's good
========================================================

![](images/dl_pearson_r_pred_vs_true.png)

***

![](images/dl_cramer_v_pred_vs_true.png)

And, it picks the original plot
========================================================

![](images/dl_pearson_r_lineup_choice.png)

***

![](images/dl_cramer_v_lineup_choice.png)

Where things go wrong
========================================================
title: FALSE
type: black_center

# Where things go wrong

When the relation is not linear
========================================================

### Is there a relation between a car's Engine Displacement and its Fuel Economy? (n = 32)

```{r Lineup-example4, message = FALSE, warning = FALSE, echo = FALSE}
lineup_data_mtcars <- readRDS("C:/SDAD_materials/lineup_mtcars2_1to60.RData")

ggplot(lineup_data_mtcars, aes(disp, mpg)) +
  geom_point() +
  facet_wrap(~ .sample)
```

<div class="footer">bit.ly/jsm2019</div>

When the relation is not linear
========================================================

### Is there a relation between a car's Engine Displacement and its Fuel Economy? (n = 32)

![](images/dl_pearson_r_lineup_choice_not_linear.png)

<div class="footer">bit.ly/jsm2019</div>

When sample size is different
========================================================

<div class="footer">bit.ly/jsm2019</div>

Where things become interesting
========================================================
title: FALSE
type: black_center

# Where things become interesting

See the computer's largest error
========================================================

![](images/dl_pearson_r_largest_error.png)

* True r: 0.22
* Predicted r: -0.06

A mistake or a new form of Robust Regression?

<div class="footer">bit.ly/jsm2019</div>

Me Against My Laptop
========================================================
title: FALSE
type: black_center

# Me Against My Laptop

How many scatter plots have I looked at?
========================================================
incremental: true

- Scatter plots, Residual plots, Pairs plots
- Say 3 plots a day (as if) X 5 days a week X 52 weeks a year X 9 years since graduation = 7K
- Well, my laptop can look at 20K scatter plots in 1 minute
- Is my laptop a better Statistician than me? No.
- *Could* my laptop be a better Statistician than me?

<div class="footer">bit.ly/jsm2019</div>

Thank You
========================================================
title: FALSE
type: back_image

# Thank You.